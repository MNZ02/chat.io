// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  firstName String
  lastName  String
  username  String      @unique
  password  String
  avatar    String?
  lastSeen  DateTime?


  chats     Chat[]
  messages  Message[]
  ChatUser  ChatUser[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

}

model Chat {
  id        String      @id @default(uuid())
  isGroup   Boolean     @default(false)
  groupName String?
  members   ChatUser[]
  messages  Message[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  User      User[]
}

model ChatUser {
  id       String    @id @default(uuid())
  userId   String
  chatId   String

  users    User     @relation(fields:[userId], references:[id])
  chats    Chat     @relation(fields:[chatId], references:[id])
  joinedAt DateTime  @default(now())


  @@unique([userId, chatId])
}



model Message {
  id        String    @id @default(uuid())
  content   String
  sender    User     @relation(fields: [senderId], references: [id])
  senderId  String
  chat      Chat     @relation(fields: [chatId], references: [id])
  chatId    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}